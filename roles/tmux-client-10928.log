1659139044.819525 client started (10928): version 3.0a, socket /tmp/tmux-1000/default, protocol 8
1659139044.819540 on Linux 5.10.102.1-microsoft-standard-WSL2 #1 SMP Wed Mar 2 00:30:59 UTC 2022; libevent 2.1.11-stable (poll)
1659139044.819546 socket is /tmp/tmux-1000/default
1659139044.819552 trying connect
1659139044.819593 add peer 0x55fce4f76030: 6 ((nil))
1659139044.819625 sending message 100 to peer 0x55fce4f76030 (4 bytes)
1659139044.819628 sending message 101 to peer 0x55fce4f76030 (7 bytes)
1659139044.819630 sending message 102 to peer 0x55fce4f76030 (11 bytes)
1659139044.819632 sending message 108 to peer 0x55fce4f76030 (25 bytes)
1659139044.819634 sending message 104 to peer 0x55fce4f76030 (0 bytes)
1659139044.819636 sending message 107 to peer 0x55fce4f76030 (4 bytes)
1659139044.819637 sending message 105 to peer 0x55fce4f76030 (11 bytes)
1659139044.819639 sending message 105 to peer 0x55fce4f76030 (94 bytes)
1659139044.819641 sending message 105 to peer 0x55fce4f76030 (95 bytes)
1659139044.819643 sending message 105 to peer 0x55fce4f76030 (20 bytes)
1659139044.819645 sending message 105 to peer 0x55fce4f76030 (26 bytes)
1659139044.819647 sending message 105 to peer 0x55fce4f76030 (15 bytes)
1659139044.819649 sending message 105 to peer 0x55fce4f76030 (16 bytes)
1659139044.819650 sending message 105 to peer 0x55fce4f76030 (17 bytes)
1659139044.819652 sending message 105 to peer 0x55fce4f76030 (20 bytes)
1659139044.819654 sending message 105 to peer 0x55fce4f76030 (8 bytes)
1659139044.819656 sending message 105 to peer 0x55fce4f76030 (12 bytes)
1659139044.819657 sending message 105 to peer 0x55fce4f76030 (32 bytes)
1659139044.819659 sending message 105 to peer 0x55fce4f76030 (1506 bytes)
1659139044.819664 sending message 105 to peer 0x55fce4f76030 (18 bytes)
1659139044.819666 sending message 105 to peer 0x55fce4f76030 (50 bytes)
1659139044.819668 sending message 105 to peer 0x55fce4f76030 (16 bytes)
1659139044.819670 sending message 105 to peer 0x55fce4f76030 (23 bytes)
1659139044.819672 sending message 105 to peer 0x55fce4f76030 (59 bytes)
1659139044.819673 sending message 105 to peer 0x55fce4f76030 (40 bytes)
1659139044.819675 sending message 105 to peer 0x55fce4f76030 (32 bytes)
1659139044.819677 sending message 105 to peer 0x55fce4f76030 (11 bytes)
1659139044.819679 sending message 105 to peer 0x55fce4f76030 (35 bytes)
1659139044.819680 sending message 105 to peer 0x55fce4f76030 (29 bytes)
1659139044.819682 sending message 105 to peer 0x55fce4f76030 (19 bytes)
1659139044.819683 sending message 105 to peer 0x55fce4f76030 (8 bytes)
1659139044.819684 sending message 105 to peer 0x55fce4f76030 (12 bytes)
1659139044.819686 sending message 105 to peer 0x55fce4f76030 (35 bytes)
1659139044.819687 sending message 105 to peer 0x55fce4f76030 (13 bytes)
1659139044.819689 sending message 105 to peer 0x55fce4f76030 (50 bytes)
1659139044.819690 sending message 105 to peer 0x55fce4f76030 (9 bytes)
1659139044.819692 sending message 105 to peer 0x55fce4f76030 (26 bytes)
1659139044.819693 sending message 105 to peer 0x55fce4f76030 (33 bytes)
1659139044.819694 sending message 105 to peer 0x55fce4f76030 (23 bytes)
1659139044.819696 sending message 105 to peer 0x55fce4f76030 (33 bytes)
1659139044.819697 sending message 105 to peer 0x55fce4f76030 (53 bytes)
1659139044.819699 sending message 105 to peer 0x55fce4f76030 (48 bytes)
1659139044.819700 sending message 105 to peer 0x55fce4f76030 (38 bytes)
1659139044.819701 sending message 105 to peer 0x55fce4f76030 (25 bytes)
1659139044.819703 sending message 105 to peer 0x55fce4f76030 (16 bytes)
1659139044.819704 sending message 105 to peer 0x55fce4f76030 (1322 bytes)
1659139044.819706 sending message 106 to peer 0x55fce4f76030 (0 bytes)
1659139044.819708 sending message 200 to peer 0x55fce4f76030 (4 bytes)
1659139044.819709 client loop enter
1659139044.819861 peer 0x55fce4f76030 message 211
1659139044.819865 client_write: sessions should be nested with care, unset $TMUX to force\n
1659139044.819878 peer 0x55fce4f76030 message 203
1659139044.819881 client loop exit
